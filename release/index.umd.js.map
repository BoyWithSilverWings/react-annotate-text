{"version":3,"file":"index.umd.js","sources":["../src/button.js","../src/annotation.js","../src/functions/findSelectButtonPosition.js","../src/functions/findHoverButtonPosition.js","../src/index.js","../src/functions/structureClientRectangle.js"],"sourcesContent":["import React, { useRef, useState, useLayoutEffect, useEffect } from \"react\";\n\nfunction Button({ buttonData, scrollPosition, content, onButtonClick }) {\n  const [buttonHeight, changeButtonHeight] = useState(null);\n  const buttonRef = useRef(null);\n\n  useEffect(() => {\n    if (buttonRef.current) {\n      changeButtonHeight(buttonRef.current.offsetHeight);\n    }\n  }, [buttonData.type]);\n\n  return (\n    <div\n      className=\"button\"\n      onClick={onButtonClick}\n      ref={buttonRef}\n      style={{\n        left: buttonData.position.left - scrollPosition.scrollX,\n        top: buttonData.position.top - scrollPosition.scrollY - buttonHeight,\n        position: \"absolute\",\n        zIndex: 1,\n        visibility: buttonHeight ? \"visible\" : \"hidden\"\n      }}\n    >\n      {content}\n    </div>\n  );\n}\nexport default Button;\n","import React from \"react\";\n\nfunction Annotaion({ highlightData, scrollPosition, hoverChange }) {\n  const onMouseOver = id => {\n    hoverChange(id);\n  };\n\n  const findAnnotations = () => {\n    return highlightData.map(singleAnnotation => {\n      return singleAnnotation.position.map((rectangle, index) => {\n        return (\n          <div key={singleAnnotation.id + \"_\" + index}>\n            <div\n              className=\"rectangle-not-visible\"\n              onMouseOver={() => onMouseOver(singleAnnotation.id)}\n              id={singleAnnotation.id}\n              style={{\n                position: \"absolute\",\n                height: rectangle.height,\n                top: rectangle.top - scrollPosition.scrollY,\n                left: rectangle.left - scrollPosition.scrollX,\n                width: rectangle.width,\n                backgroundColor: \"none\",\n                opacity: 1\n              }}\n            ></div>\n            <div\n              className=\"rectangle-visible\"\n              id={singleAnnotation.id}\n              style={{\n                position: \"absolute\",\n                height: rectangle.height,\n                top: rectangle.top - scrollPosition.scrollY,\n                left: rectangle.left - scrollPosition.scrollX,\n                width: rectangle.width,\n                backgroundColor: \"yellow\",\n                opacity: 1,\n                zIndex: -1\n              }}\n            ></div>\n          </div>\n        );\n      });\n    });\n  };\n\n  return <div className=\"annotations\">{findAnnotations()}</div>;\n}\nexport default Annotaion;\n","export const findSelectButtonPosition = position => {\n  return position.reduce((least, item) => {\n    if (item.top < least.top) {\n      least = item;\n    }\n    return { top: least.top, left: least.left };\n  }, position[0]);\n};\n","import { findSelectButtonPosition } from \"./findSelectButtonPosition\";\nexport const findHoverButtonPosition = (hoveredId, highlightData) => {\n  const selectedData = highlightData.find(function(e) {\n    return e.id == hoveredId;\n  });\n  return findSelectButtonPosition(selectedData.position);\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"./button\";\nimport Annotation from \"./annotation\";\nimport { findSelectButtonPosition } from \"./functions/findSelectButtonPosition\";\nimport { structureClientRectangle } from \"./functions/structureClientRectangle\";\nimport { findHoverButtonPosition } from \"./functions/findHoverButtonPosition\";\n\nfunction ReactAnnotateText({\n  src,\n  srcDoc,\n  height,\n  width,\n  highlightData,\n  selectionPopup,\n  hoverPopup,\n  iframeTitle\n}) {\n  const iframeRef = useRef(null);\n  const [currentSelectionData, changeCurrentSelectionData] = useState(null);\n  const [currentHoverData, changeCurrentHoverData] = useState(null);\n  const [buttonData, changeButtonData] = useState(null);\n  const [scrollPosition, changeScrollPosition] = useState({\n    scrollY: 0,\n    scrollX: 0\n  });\n\n  const onMouseUp = () => {\n    const selection = iframeRef.current.contentWindow.getSelection();\n    const selectionText = selection.toString();\n    if (selectionText) {\n      const clientRectangleArray = selection.getRangeAt(0).getClientRects();\n      const position = structureClientRectangle(\n        clientRectangleArray,\n        scrollPosition\n      );\n      changeCurrentSelectionData({\n        position,\n        selectionText\n      });\n      changeButtonData({\n        type: \"select\",\n        position: findSelectButtonPosition(position)\n      });\n    } else {\n      clearButtonAndCurrentData();\n    }\n  };\n\n  const onScroll = () => {\n    changeScrollPosition({\n      scrollY: iframeRef.current.contentWindow.scrollY,\n      scrollX: iframeRef.current.contentWindow.scrollX\n    });\n  };\n\n  const buttonContent = () => {\n    if (buttonData.type === \"select\") {\n      return selectionPopup(currentSelectionData);\n    } else if (buttonData.type === \"hover\") {\n      return hoverPopup(currentHoverData);\n    }\n  };\n\n  const hoverChange = hoveredId => {\n    if (hoveredId) {\n      changeCurrentHoverData(hoveredId);\n      changeButtonData({\n        type: \"hover\",\n        position: findHoverButtonPosition(hoveredId, highlightData)\n      });\n    } else {\n      clearButtonAndCurrentData();\n    }\n  };\n\n  const clearButtonAndCurrentData = () => {\n    changeCurrentSelectionData(null);\n    changeCurrentHoverData(null);\n    changeButtonData(null);\n  };\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      iframeRef.current.contentDocument.addEventListener(\"scroll\", onScroll);\n      iframeRef.current.contentDocument.addEventListener(\"mouseup\", onMouseUp);\n    }\n    return () => {\n      iframeRef.current.contentDocument.removeEventListener(\"scroll\", onScroll);\n      iframeRef.current.contentDocument.removeEventListener(\n        \"mouseup\",\n        onMouseUp\n      );\n    };\n  }, [scrollPosition]);\n\n  return (\n    <div\n      onMouseLeave={clearButtonAndCurrentData}\n      style={{\n        width: width,\n        height: height,\n        overflow: \"hidden\",\n        position: \"relative\"\n      }}\n    >\n      <iframe\n        src={src}\n        srcDoc={srcDoc}\n        width={width}\n        height={height}\n        title={iframeTitle}\n        ref={iframeRef}\n      ></iframe>\n      {highlightData.length && (\n        <Annotation\n          highlightData={highlightData}\n          scrollPosition={scrollPosition}\n          hoverChange={hoverChange}\n        />\n      )}\n      {buttonData && (\n        <Button\n          buttonData={buttonData}\n          scrollPosition={scrollPosition}\n          content={buttonContent()}\n          onButtonClick={clearButtonAndCurrentData}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ReactAnnotateText;\n","export const structureClientRectangle = (\n  clientRectangleArray,\n  scrollPosition\n) => {\n  return Array.from(clientRectangleArray).map(item => {\n    return {\n      left: item.left + scrollPosition.scrollX,\n      top: item.top + scrollPosition.scrollY,\n      height: item.height,\n      width: item.width\n    };\n  });\n};\n"],"names":["Button","ref","useState","buttonRef","useRef","useEffect","current","changeButtonHeight","offsetHeight","buttonData","type","h","className","onClick","onButtonClick","style","left","position","scrollPosition","scrollX","top","scrollY","buttonHeight","zIndex","visibility","content","Annotaion","map","singleAnnotation","rectangle","index","key","id","onMouseOver","hoverChange","height","width","backgroundColor","opacity","const","findSelectButtonPosition","reduce","least","item","findHoverButtonPosition","hoveredId","highlightData","selectedData","find","e","iframeRef","onMouseUp","selection","contentWindow","getSelection","selectionText","toString","clientRectangleArray","Array","from","structureClientRectangle","getRangeAt","getClientRects","changeCurrentSelectionData","changeButtonData","clearButtonAndCurrentData","onScroll","changeScrollPosition","changeCurrentHoverData","contentDocument","addEventListener","removeEventListener","onMouseLeave","overflow","src","srcDoc","title","iframeTitle","length","Annotation","selectionPopup","currentSelectionData","hoverPopup","currentHoverData"],"mappings":"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"}